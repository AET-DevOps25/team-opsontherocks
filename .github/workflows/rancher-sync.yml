name: Deploy Helm Chart to Rancher

on:
  push:
    branches:
      - main
      - deployment

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set image tag for Rancher
        run: echo "TAG=latest-rancher" >> $GITHUB_ENV

      - name: Set up kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.30.1

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Ensure namespace exists
        run: kubectl get ns opsontherocks || kubectl create ns opsontherocks

      - name: Fix stuck Helm release (if needed)
        run: |
          echo "Checking for existing Helm release 'wheeloflife'..."
          helm status wheeloflife -n opsontherocks || echo "Release does not exist yet."

          echo "Checking for Helm secrets with locks..."
          locked_secret=$(kubectl get secret -n opsontherocks -o name | grep 'sh.helm.release.v1.wheeloflife' | tail -n 1)
          if [ -n "$locked_secret" ]; then
            echo "Deleting potentially locked Helm secret: $locked_secret"
            kubectl delete $locked_secret -n opsontherocks || true
          fi

      - name: Deploy using Helm
        run: |
          helm upgrade --install wheeloflife ./deployment/helm \
            --namespace opsontherocks \
            --set client.image.tag=${{ env.TAG }} \
            --set serverAuth.image.tag=${{ env.TAG }} \
            --set serverWheel.image.tag=${{ env.TAG }} \
            --set genai.image.tag=${{ env.TAG }} \
            --wait
