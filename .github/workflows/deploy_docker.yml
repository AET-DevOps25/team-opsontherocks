name: Deploy current Docker images

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: opsontherocks

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up labsuser SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_EC2_PRIVATE_KEY }}" > ~/.ssh/labsuser.pem
          chmod 400 ~/.ssh/labsuser.pem

      - name: Copy Docker Compose file to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.EC2_PUBLIC_IP }}
          username: ${{ vars.AWS_EC2_USER }}
          key_path: ~/.ssh/labsuser.pem
          source: compose-aws.yml
          target: /home/${{ vars.AWS_EC2_USER }}

      - name: Generate .env.prod file on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.EC2_PUBLIC_IP }}
          username: ${{ vars.AWS_EC2_USER }}
          key_path: ~/.ssh/labsuser.pem
          script: |
            set -euo pipefail
            cat > ~/.env.prod <<EOF
            CLIENT_HOST=client.${{ vars.EC2_PUBLIC_IP }}.nip.io
            SERVER_HOST=api.${{ vars.EC2_PUBLIC_IP }}.nip.io
            PUBLIC_API_URL=https://api.${{ vars.EC2_PUBLIC_IP }}.nip.io/api
            EOF

      - name: Pull and redeploy Docker containers
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.EC2_PUBLIC_IP }}
          username: ${{ vars.AWS_EC2_USER }}
          key_path: ~/.ssh/labsuser.pem
          script: |
            set -euo pipefail
            echo "${{ secrets.GITHUB_TOKEN }}" | \
              docker login ghcr.io -u "${{ github.actor }}" --password-stdin
            docker compose -f compose-aws.yml --env-file ~/.env.prod pull
            docker compose -f compose-aws.yml --env-file ~/.env.prod up -d --remove-orphans
