name: Deploy current Docker images

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: opsontherocks
      url: 'https://client.${{ vars.EC2_PUBLIC_IP }}.nip.io'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy Docker Compose file to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.EC2_PUBLIC_IP }}
          username: ${{ vars.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          source: compose-aws.yml
          target: /home/${{ vars.AWS_EC2_USER }}
          
      - name: Deploy containers with Docker Compose
        uses: appleboy/ssh-action@v1.0.3
        env:
          CLIENT_HOST:  "client.${{ vars.EC2_PUBLIC_IP }}.nip.io"
          SERVER_HOST:  "api.${{ vars.EC2_PUBLIC_IP }}.nip.io"
          PUBLIC_API_URL: "https://api.${{ vars.EC2_PUBLIC_IP }}.nip.io/api"
          POSTGRES_USER:      ${{ vars.POSTGRES_USER }}
          POSTGRES_PASSWORD:  ${{ secrets.POSTGRES_PASSWORD }}
          GRAFANA_USER:       ${{ vars.GRAFANA_USER }}
          GRAFANA_PASSWORD:   ${{ secrets.GRAFANA_PASSWORD }}
          JWT_SECRET:         ${{ secrets.JWT_SECRET }}
        with:
          host:      ${{ vars.EC2_PUBLIC_IP }}
          username:  ${{ vars.AWS_EC2_USER }}
          key:       ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          envs:      CLIENT_HOST,SERVER_HOST,PUBLIC_API_URL,POSTGRES_USER,POSTGRES_PASSWORD,GRAFANA_USER,GRAFANA_PASSWORD,JWT_SECRET
          script: |
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker compose -f compose-aws.yml up --pull always -d --remove-orphans
