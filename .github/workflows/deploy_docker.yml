name: Deploy current Docker images
on: { workflow_dispatch: {} }

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: AWS      # ← matches the env shown in your screenshot

    steps:
      - uses: actions/checkout@v4

      # ───────────────────────────────────────────────────────────────
      # scp the compose file
      - name: Copy compose file to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host:     ${{ vars.EC2_PUBLIC_IP }}          # pulls 3.93.212.207
          username: ${{ vars.AWS_EC2_USER }}           # pulls ubuntu
          key:      ${{ secrets.AWS_EC2_PRIVATE_KEY }} # no temp file needed
          source:   compose.aws.yml
          target:   /home/${{ vars.AWS_EC2_USER }}

      # ───────────────────────────────────────────────────────────────
      # create the .env file
      - name: Generate .env.prod on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host:     ${{ vars.EC2_PUBLIC_IP }}
          username: ${{ vars.AWS_EC2_USER }}
          key:      ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            set -euo pipefail
            cat > ~/ .env.prod <<EOF
            CLIENT_HOST=client.${{ vars.EC2_PUBLIC_IP }}.nip.io
            SERVER_HOST=api.${{ vars.EC2_PUBLIC_IP }}.nip.io
            PUBLIC_API_URL=https://api.${{ vars.EC2_PUBLIC_IP }}.nip.io/api
            EOF

      # ───────────────────────────────────────────────────────────────
      # pull & restart containers
      - name: Pull and redeploy containers
        uses: appleboy/ssh-action@v1.0.3
        with:
          host:     ${{ vars.EC2_PUBLIC_IP }}
          username: ${{ vars.AWS_EC2_USER }}
          key:      ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            set -euo pipefail
            echo "${{ secrets.GITHUB_TOKEN }}" | \
              docker login ghcr.io -u "${{ github.actor }}" --password-stdin
            docker compose -f compose.aws.yml --env-file ~/ .env.prod pull
            docker compose -f compose.aws.yml --env-file ~/ .env.prod up -d --remove-orphans
